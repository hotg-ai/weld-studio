initSidebarItems({"constant":[["MAIN_DB","Shorthand for [`DatabaseName::Main`]."],["TEMP_DB","Shorthand for [`DatabaseName::Temp`]."]],"enum":[["AccessMode","duckdb access mode, default is Automatic"],["DatabaseName","Name for a database within a DuckDB connection."],["DefaultNullOrder","duckdb default null order, default is nulls first"],["DefaultOrder","duckdb default order, default is Asc"],["DropBehavior","Options for how a Transaction or Savepoint should behave when it is dropped."],["Error","Enum listing possible errors from duckdb."],["ErrorCode","Error Codes"],["TransactionBehavior","Options for transaction behavior. See BEGIN TRANSACTION for details."]],"fn":[["appender_params_from_iter","Constructor function for a [`ParamsFromIter`]. See its documentation for more."],["params_from_iter","Constructor function for a [`ParamsFromIter`]. See its documentation for more."]],"macro":[["params","A macro making it more convenient to pass heterogeneous or long lists of parameters as a `&[&dyn ToSql]`."]],"mod":[["types","Traits dealing with DuckDB data types."]],"struct":[["AndThenRows","An iterator over the mapped resulting rows of a query, with an Error type unifying with Error."],["Appender","Appender for fast import data"],["AppenderParamsFromIter","Adapter type which allows any iterator over [`ToSql`] values to implement [`Params`]."],["Arrow","An handle for the resulting RecordBatch of a query."],["Column","Information about a column of a DuckDB query."],["Config","duckdb configuration Refer to https://github.com/duckdb/duckdb/blob/master/src/main/config.cpp"],["Connection","A connection to a DuckDB database."],["Map","`F` is used to transform the streaming iterator into a fallible iterator."],["MappedRows","An iterator over the mapped resulting rows of a query."],["ParamsFromIter","Adapter type which allows any iterator over [`ToSql`] values to implement [`Params`]."],["Row","A single result row of a query."],["Rows","An handle for the resulting rows of a query."],["Savepoint","Represents a savepoint on a database connection."],["Statement","A prepared statement."],["Transaction","Represents a transaction on a database connection."]],"trait":[["AppenderParams","Trait used for sets of parameter passed into SQL statements/queries."],["OptionalExt","See the method documentation."],["Params","Trait used for sets of parameter passed into SQL statements/queries."],["RowIndex","A trait implemented by types that can index into columns of a row."],["ToSql","A trait for types that can be converted into DuckDB values. Returns [`Error::ToSqlConversionFailure`] if the conversion fails."]],"type":[["Result","A typedef of the result returned by many methods."]]});