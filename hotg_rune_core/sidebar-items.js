initSidebarItems({"constant":[["ONNX_MIMETYPE","The mimetype used for a ONNX model."],["TFJS_MIMETYPE","The mimetype used for a TensorFlow JS model."],["TFLITE_MIMETYPE","The mimetype used for a TensorFlow Lite model."],["TF_MIMETYPE","The mimetype used for a TensorFlow model."],["VERSION","The version number for this crate."]],"enum":[["ElementType",""],["PixelFormat",""],["PixelFormatConversionError",""],["Type",""],["Value","A dynamically typed value that may be passed back and forth across the runtime."]],"fn":[["decode_inline_resource","Read an [`InlineResource`]’s data from its binary form in memory."]],"mod":[["capabilities",""],["outputs",""]],"struct":[["InlineResource","A `(&str, &[u8])` which stores the first field (name) and second field (data) inline and can be read out of memory using [`decode_inline_resource()`]."],["InvalidConversionError",""],["SerializableRecord","A serializable version of [`log::Record`]."],["Shape","A tensor’s shape."],["Tensor","A multidimensional array with copy-on-write semantics."],["TensorView","An immutable view into a [`Tensor`] with a particular rank (number of dimensions)."],["TensorViewMut","A mutable view into a [`Tensor`] with a particular rank (number of dimensions)."],["UnknownElementType",""]],"trait":[["AsElementType","A type that is associated with an [`ElementType`]."],["AsType","A Rust primitive which has a corresponding [`Type`] and can be converted to or from a [`Value`]."],["TensorList","A helper trait which lets us get the shape from a tuple of different tensors."],["TensorListMut","A set of tensors that can be mutated."]]});