initSidebarItems({"constant":[["ALIGNMENT","Cache and allocation multiple alignment size"]],"fn":[["allocate_aligned","Allocates a cache-aligned memory region of `size` bytes with uninitialized values. This is more performant than using [allocate_aligned_zeroed] when all bytes will have an unknown or non-zero value and is semantically similar to `malloc`."],["allocate_aligned_zeroed","Allocates a cache-aligned memory region of `size` bytes with `0` on all of them. This is more performant than using [allocate_aligned] and setting all bytes to zero and is semantically similar to `calloc`."],["free_aligned","Safety"],["reallocate","Safety"]],"trait":[["Allocation","The owner of an allocation. The trait implementation is responsible for dropping the allocations once no more references exist."],["NativeType","A type that Rust’s custom allocator knows how to allocate and deallocate. This is implemented for all Arrow’s physical types whose in-memory representation matches Rust’s physical types. Consider this trait sealed."]]});